{"version":3,"file":"options.min.js","sources":["../src/options.js"],"sourcesContent":["// This file is part of Moodle - https://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <https://www.gnu.org/licenses/>.\n\n/**\n * Options helper for the Moodle tiny_medial plugin.\n *\n * @module      plugintype_pluginname/options\n * @copyright   2023 MEDIAL, Tim Williams <tim@medial.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPluginOptionName} from 'editor_tiny/options';\nimport {pluginName} from './common';\n\n// Helper variables for the option names.\nexport const baseurlName = getPluginOptionName(pluginName, 'baseurl');\nconst ltiurlName = getPluginOptionName(pluginName, 'ltiurl');\nconst statusurlName = getPluginOptionName(pluginName, 'statusurl');\nconst useridName = getPluginOptionName(pluginName, 'userid');\nconst hideinsertName = getPluginOptionName(pluginName, 'hideinsert');\nconst insertdelayName = getPluginOptionName(pluginName, 'insertdelay');\nconst oauthConsumerKeyName = getPluginOptionName(pluginName, 'oauthConsumerKey');\nconst modtypeName = getPluginOptionName(pluginName, 'modtype');\nconst placeholderName = getPluginOptionName(pluginName, 'placeholder');\nconst playersizeurlName = getPluginOptionName(pluginName, 'playersizeurl');\nconst courseName = getPluginOptionName(pluginName, 'course');\nconst launchTypeName = getPluginOptionName(pluginName, 'launchType');\nconst viewLaunchTypeName = getPluginOptionName(pluginName, 'viewLaunchType');\nconst libLaunchTypeName = getPluginOptionName(pluginName, 'libLaunchType');\nconst embedOptName = getPluginOptionName(pluginName, 'embedopt');\nconst linkOnlyName = getPluginOptionName(pluginName, 'linkonly');\n\n/**\n * Options registration function.\n *\n * @param {tinyMCE} editor\n */\nexport const register = (editor) => {\n    const registerOption = editor.options.register;\n\n    // For each option, register it with the editor.\n    // Valid type are defined in https://www.tiny.cloud/docs/tinymce/6/apis/tinymce.editoroptions/\n    registerOption(baseurlName, {\n        processor: 'string',\n    });\n    registerOption(ltiurlName, {\n        processor: 'string',\n    });\n    registerOption(statusurlName, {\n        processor: 'string',\n    });\n    registerOption(useridName, {\n        processor: 'number',\n    });\n    registerOption(hideinsertName, {\n        processor: 'boolean',\n    });\n    registerOption(insertdelayName, {\n        processor: 'number',\n    });\n    registerOption(oauthConsumerKeyName, {\n        processor: 'string',\n    });\n    registerOption(modtypeName, {\n        processor: 'string',\n    });\n    registerOption(placeholderName, {\n        processor: 'boolean',\n    });\n    registerOption(playersizeurlName, {\n        processor: 'string',\n    });\n    registerOption(courseName, {\n        processor: 'number',\n    });\n    registerOption(launchTypeName, {\n        processor: 'number',\n    });\n    registerOption(viewLaunchTypeName, {\n        processor: 'number',\n    });\n    registerOption(libLaunchTypeName, {\n        processor: 'number',\n    });\n    registerOption(embedOptName, {\n        processor: 'boolean',\n    });\n    registerOption(linkOnlyName, {\n        processor: 'boolean',\n    });\n};\n\n// TMW Note, when importing always use {} around the name, eg \"import {getLtiurl} from './options';\" .\n// If you don't, you'll get an error \"Uncaught TypeError: _options.default is not a function\".\n// The plugin skeleton didn't do this for the sample parameter so it broke.\n\nexport const getBaseurl = (editor) => editor.options.get(baseurlName);\n\n/**\n * Fetch the ltiurl value for this editor instance.\n *\n * @param {tinyMCE} editor The editor instance to fetch the value for\n * @returns {object} The value of the ltiurl option\n */\n//export const  = (editor) => editor.options.get();\n\nexport const getLtiurl = (editor) => editor.options.get(ltiurlName);\n\nexport const getStatusUrl = (editor) => editor.options.get(statusurlName);\n\nexport const getUserId = (editor) => editor.options.get(useridName);\n\nexport const getHideInsert = (editor) => editor.options.get(hideinsertName);\n\nexport const getInsertDelay = (editor) => editor.options.get(insertdelayName);\n\nexport const getOauthConsumerKey = (editor) => editor.options.get(oauthConsumerKeyName);\n\nexport const getModType = (editor) => editor.options.get(modtypeName);\n\nexport const getPlaceholder = (editor) => editor.options.get(placeholderName);\n\nexport const getPlayerSizeUrl = (editor) => editor.options.get(playersizeurlName);\n\nexport const getCourse = (editor) => editor.options.get(courseName);\n\nexport const getLaunchType = (editor) => editor.options.get(launchTypeName);\n\nexport const getViewLaunchType = (editor) => editor.options.get(viewLaunchTypeName);\n\nexport const getLibLaunchType = (editor) => editor.options.get(libLaunchTypeName);\n\nexport const getEmbedOpt = (editor) => editor.options.get(embedOptName);\n\nexport const getLinkOnly = (editor) => editor.options.get(linkOnlyName);\n"],"names":["baseurlName","pluginName","ltiurlName","statusurlName","useridName","hideinsertName","insertdelayName","oauthConsumerKeyName","modtypeName","placeholderName","playersizeurlName","courseName","launchTypeName","viewLaunchTypeName","libLaunchTypeName","embedOptName","linkOnlyName","editor","registerOption","options","register","processor","get"],"mappings":";;;;;;;;MA2BaA,aAAc,gCAAoBC,mBAAY,kDACrDC,YAAa,gCAAoBD,mBAAY,UAC7CE,eAAgB,gCAAoBF,mBAAY,aAChDG,YAAa,gCAAoBH,mBAAY,UAC7CI,gBAAiB,gCAAoBJ,mBAAY,cACjDK,iBAAkB,gCAAoBL,mBAAY,eAClDM,sBAAuB,gCAAoBN,mBAAY,oBACvDO,aAAc,gCAAoBP,mBAAY,WAC9CQ,iBAAkB,gCAAoBR,mBAAY,eAClDS,mBAAoB,gCAAoBT,mBAAY,iBACpDU,YAAa,gCAAoBV,mBAAY,UAC7CW,gBAAiB,gCAAoBX,mBAAY,cACjDY,oBAAqB,gCAAoBZ,mBAAY,kBACrDa,mBAAoB,gCAAoBb,mBAAY,iBACpDc,cAAe,gCAAoBd,mBAAY,YAC/Ce,cAAe,gCAAoBf,mBAAY,8BAO5BgB,eACfC,eAAiBD,OAAOE,QAAQC,SAItCF,eAAelB,YAAa,CACxBqB,UAAW,WAEfH,eAAehB,WAAY,CACvBmB,UAAW,WAEfH,eAAef,cAAe,CAC1BkB,UAAW,WAEfH,eAAed,WAAY,CACvBiB,UAAW,WAEfH,eAAeb,eAAgB,CAC3BgB,UAAW,YAEfH,eAAeZ,gBAAiB,CAC5Be,UAAW,WAEfH,eAAeX,qBAAsB,CACjCc,UAAW,WAEfH,eAAeV,YAAa,CACxBa,UAAW,WAEfH,eAAeT,gBAAiB,CAC5BY,UAAW,YAEfH,eAAeR,kBAAmB,CAC9BW,UAAW,WAEfH,eAAeP,WAAY,CACvBU,UAAW,WAEfH,eAAeN,eAAgB,CAC3BS,UAAW,WAEfH,eAAeL,mBAAoB,CAC/BQ,UAAW,WAEfH,eAAeJ,kBAAmB,CAC9BO,UAAW,WAEfH,eAAeH,aAAc,CACzBM,UAAW,YAEfH,eAAeF,aAAc,CACzBK,UAAW,iCAQQJ,QAAWA,OAAOE,QAAQG,IAAItB,gCAU/BiB,QAAWA,OAAOE,QAAQG,IAAIpB,kCAE3Be,QAAWA,OAAOE,QAAQG,IAAInB,kCAEjCc,QAAWA,OAAOE,QAAQG,IAAIlB,mCAE1Ba,QAAWA,OAAOE,QAAQG,IAAIjB,wCAE7BY,QAAWA,OAAOE,QAAQG,IAAIhB,8CAEzBW,QAAWA,OAAOE,QAAQG,IAAIf,0CAEvCU,QAAWA,OAAOE,QAAQG,IAAId,qCAE1BS,QAAWA,OAAOE,QAAQG,IAAIb,2CAE5BQ,QAAWA,OAAOE,QAAQG,IAAIZ,sCAErCO,QAAWA,OAAOE,QAAQG,IAAIX,mCAE1BM,QAAWA,OAAOE,QAAQG,IAAIV,2CAE1BK,QAAWA,OAAOE,QAAQG,IAAIT,8CAE/BI,QAAWA,OAAOE,QAAQG,IAAIR,wCAEnCG,QAAWA,OAAOE,QAAQG,IAAIP,mCAE9BE,QAAWA,OAAOE,QAAQG,IAAIN"}